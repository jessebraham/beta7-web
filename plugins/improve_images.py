#!/usr/bin/env python
# -*- coding: utf-8 -*-

from bs4 import BeautifulSoup
from pelican import signals

from plugins import list_files


def improve_images(pelican):
    """
    Find all images within `.post` elements and set their parent container's
    styles.

    Checks for a `IMPROVE_IMAGES` configuration entry in the Pelican settings,
    which in turn should contain an `enabled` flag value. If the configuration
    is not provided, the plugin defaults to enabled.

    :param pelican: The Pelican instance.
    """
    options = pelican.settings.get("IMPROVE_IMAGES", {})
    enabled = options.get("enabled", True)
    if not enabled:
        return

    html_files = list_files(pelican.settings["OUTPUT_PATH"], ".html")
    for filename in html_files:
        with open(filename, "r") as f:
            soup = BeautifulSoup(f.read(), "html.parser")

        post = soup.find(attrs={"class": "post"})
        if not post:
            continue

        images = post.find_all("img")
        if not images:
            continue

        for image in images:
            # TODO: wrap `img` in a link
            image.parent["class"] = "image"

        with open(filename, "w") as f:
            f.write(str(soup))


def register():
    """
    Once all HTML files have been generated by pelican, modify the markup for
    any images found.
    """
    signals.finalized.connect(improve_images)
